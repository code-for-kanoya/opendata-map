# Default values for opendata-map.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: code4kanoya/opendata_map
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

persistentVolume:
  existingClaim:
    enable: true
    name: hoge-claim
  storageClass: hoge-class
  size: 2Gi

dotEnv:
  APP_NAME: "OpenDataMap"
  APP_ENV: "local"
  APP_KEY: ""
  APP_DEBUG: "false"
  APP_URL: "http://localhost"

  LOG_CHANNEL: "stack"

  DB_CONNECTION: "mysql"
  DB_HOST: "127.0.0.1"
  DB_PORT: "3306"
  DB_DATABASE: "dbname"
  DB_USERNAME: "dbuser"
  DB_PASSWORD: "dbpassword"
  DB_SSLMODE: prefer
  MYSQL_SSL: false
  MYSQL_ATTR_SSL_CA: ""

  BROADCAST_DRIVER: "log"
  CACHE_DRIVER: "file"
  QUEUE_CONNECTION: "sync"
  SESSION_DRIVER: "file"
  SESSION_LIFETIME: "120"

  REDIS_HOST: "127.0.0.1"
  REDIS_PASSWORD: "null"
  REDIS_PORT: "6379"

  MAIL_MAILER: "smtp"
  MAIL_HOST: "smtp.mailtrap.io"
  MAIL_PORT: "2525"
  MAIL_USERNAME: "null"
  MAIL_PASSWORD: "null"
  MAIL_ENCRYPTION: "null"
  MAIL_FROM_ADDRESS: "null"
  MAIL_FROM_NAME: "${APP_NAME}"

  # AWS_ACCESS_KEY_ID:
  # AWS_SECRET_ACCESS_KEY:
  # AWS_DEFAULT_REGION: us-east-1
  # AWS_BUCKET:

  # PUSHER_APP_ID:
  # PUSHER_APP_KEY:
  # PUSHER_APP_SECRET:
  PUSHER_APP_CLUSTER: "mt1"

  MIX_PUSHER_APP_KEY: "${PUSHER_APP_KEY}"
  MIX_PUSHER_APP_CLUSTER: "${PUSHER_APP_CLUSTER}"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

openstreetmap:
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  replicaCount: 1

  image:
    repository: overv/openstreetmap-tile-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  environment:
    - name: UPDATES
      value: "enabled"
    - name: ALLOW_CORS
      value: "enabled"
    - name: THREADS
      value: 4
    # - name: OSM2PGSQL_EXTRA_ARGS
    #   value: "-C 4096"
    # - name: AUTOVACUUM
    #   value: "on"

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 105

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  persistentVolume:
    db:
      existingClaim:
        enable: true
        name: hoge-map-db-claim
      storageClass: default
      size: 15Gi # 実測で9.6GB必要だったので、実行時のファイルサイズの一時的な増加などに備えて最低でも15Gは必要
    tileCache:
      existingClaim:
        enable: true
        name: hoge-map-tile-cache-claim
      storageClass: azurefile
      size: 20Gi

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            backend:
              serviceName: chart-example.local
              servicePort: 80
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  init:
    # 組み込みの初期化処理を行うか否か
    enabled: true

    # 初期化処理に関連したパラメータを指定する
    environment:
      - name: THREADS
        value: 4
      # - name: OSM2PGSQL_EXTRA_ARGS
      #   value: "-C 4096 --flat-nodes /nodes/flat_nodes.bin"
      # - name: AUTOVACUUM
      #   value: "on"
      - name: DOWNLOAD_PBF
        value: ""
      - name: DOWNLOAD_POLY
        value: ""
    persistentVolume:
      nodeCache:
        enabled: false
        existingClaim:
          enable: true
          name: hoge-map-flatnode-cache-claim
        storageClass: azurefile
        size: 80Gi # 少なくとも70GBは必要だった。import(flatnode)時のみ利用するので、import後は無効化してデプロイ後、手動でpvcを削除するようにする。

    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

nginx:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "latest"

  environment:
    - name: APP_SERVER
      # value: "opendata-map-nginx.default.svc.cluster.local"
      value: "localhost"

  templates:
    - name: default.conf.template
      config: >
        server {
            listen       80;
            listen  [::]:80;
            server_name  localhost;

            gzip on;
            gzip_types text/css text/javascript application/json application/geo+json application/octet-stream;
            gzip_comp_level 6;
            gzip_buffers 4 8k;
            gzip_min_length 1000;
            gzip_disable "MSIE [1-6]\."  "Mozilla/4";

            #charset koi8-r;
            #access_log  /var/log/nginx/host.access.log  main;

            location / {
                root   /var/www/public;
                index  index.php index.html index.htm;
                try_files $uri $uri/ /index.php?$query_string;
            }

            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }

            # proxy the PHP scripts to Apache listening on 127.0.0.1:80
            #
            #location ~ \.php$ {
            #    proxy_pass   http://127.0.0.1;
            #}

            # pass the PHP scripts to FastCGI server listening on ${APP_SERVER}:9000
            #
            location ~ \.php$ {
              root           /var/workspace/public;
              fastcgi_pass   ${APP_SERVER}:9000;
              fastcgi_index  index.php;
              fastcgi_param  SCRIPT_FILENAME  $document_root/index.php$fastcgi_script_name;
              include        fastcgi_params;
            }

            # deny access to .htaccess files, if Apache's document root
            # concurs with nginx's one
            #
            #location ~ /\.ht {
            #    deny  all;
            #}
        }



  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

db:
  enabled: false
  image:
    repository: mysql
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "8.0"

  persistentVolume: {}
  # persistentVolume:
  #   storageClass: azurefile

  timezone: "Asia/Tokyo"

  env:
    secretName: opendatamap-db-account

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
