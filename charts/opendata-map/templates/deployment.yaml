apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opendata-map.fullname" . }}
  labels:
    {{- include "opendata-map.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "opendata-map.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "opendata-map.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "opendata-map.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: "{{ include "opendata-map.fullname" . }}"
          volumeMounts:
            - name: {{ include "opendata-map.fullname" . }}-pv-storage
              mountPath: "/var/www"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /var/workspace/public /var/www"]
        - name: nginx
          securityContext:
            {{- toYaml .Values.nginx.securityContext | nindent 12 }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          env:
            {{- with .Values.nginx.environment }}
              {{- range . }}
              - name: {{ .name }}
                value: "{{ .value }}"
              {{- end }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/templates
              readOnly: true
            - name: {{ include "opendata-map.fullname" . }}-pv-storage
              mountPath: "/var/www"
      volumes:
        - name: {{ include "opendata-map.fullname" . }}-pv-storage
          persistentVolumeClaim:
            {{- if .Values.persistentVolume.existingClaim.enable }}
            claimName: {{ .Values.persistentVolume.existingClaim.name }}
            {{- else }}
            claimName: {{ include "opendata-map.fullname" . }}-pv-claim
            {{- end }}
        - name: config-volume
          configMap:
            # コンテナに追加するファイルを含むConfigMapの名前を提供する
            name: {{ include "opendata-map.fullname" . }}-nginx
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
